import requests
import hashlib
import base64
import json
from Crypto import Random
from Crypto.Cipher import AES
from Crypto.Util.Padding import pad, unpad


URL = 'http://host1.dreamhack.games:'
PORT = 22013
URL += str(PORT)

# URL = 'http://192.168.78.123:7777'

articles = [None,None]
contents = [None,None]
guest_token = ''

def login(id,pw):
    global guest_token
    url = URL + "/login"
    params = {'id': id, 'pw': pw}
    response = requests.get(url,params=params)
    if id == 'guest':
        guest_token = response.json()['result']['token']

def gb(idx):
    global articles
    url = URL + "/gb/" + str(idx)
    response = requests.get(url)
    rj = response.json()['result']['article']
    tmp = {
        "idx": idx,
        "author": rj['author'],
        "title": rj['title'],
        "enc_data": rj['enc_data'],
        "sig": rj['sig'],
    }
    articles[idx-1] = tmp

def decrypt(e,token,sig,idx):
    global contents
    url = URL + "/secure/decrypt"
    params = {"e_data": e, "token": token, "sig" : sig}
    response = requests.get(url,params=params)
    #print(response.json())
    rj = response.json()['result']
    '''
    idx : 0 --> admin
    idx : 1 --> guest
    '''
    try:
        # print(rj['content'])
        contents[idx-1] = rj['content']
    except:
        msg = rj['message']
        if msg != 'ValueError':
            # print(msg)
            return msg
        else:
            #print('adaffda')
            return None

def get_info():
    gb(1)
    gb(2)

#login guest --> get guest token
login('guest','guest')

get_info()



decrypt(articles[0]['enc_data'],guest_token,articles[0]['sig'],1)

tmp = base64.b64decode(articles[0]['enc_data'].encode('latin-1'))

# print(type(tmp))

d = [0]*0x10
for j in range(0xf,-1,-1):
    # print(j)
    for i in range(0,0x100):
        new_block = tmp[:16]

        arr = [0]*(0x10-j)
        if j<0xf:
            for k in range(1,0x10-j):
                arr[k] = d[k+j]^(0x10-j)
        arr[0] = i
        new_block += b'A'*j + bytes(arr)

        new_block += tmp[32:48]

        enc = base64.b64encode(new_block).decode('latin-1')
        msg = decrypt(enc,guest_token,articles[0]['sig'],1)
        if msg != None:
            break
    d[j] = (0x10-j) ^ i

# print(d)

for i in range(0x10):
    print(chr(d[i] ^ tmp[16+i]),end="")



tmp = base64.b64decode(articles[0]['enc_data'].encode('latin-1'))

# print(type(tmp))

d = [0]*0x10
for j in range(0xf,-1,-1):
    # print(j)
    for i in range(0,0x100):
        new_block = b""

        arr = [0]*(0x10-j)
        if j<0xf:
            for k in range(1,0x10-j):
                arr[k] = d[k+j]^(0x10-j)
        arr[0] = i
        new_block += b'A'*j + bytes(arr)

        new_block += tmp[16:32]

        enc = base64.b64encode(new_block).decode('latin-1')
        msg = decrypt(enc,guest_token,articles[0]['sig'],1)
        if msg != None:
            break
    d[j] = (0x10-j) ^ i

# print(d)

for i in range(0x10):
    print(chr(d[i] ^ tmp[i]),end="")
